mutate(Start = as.numeric(Start)) %>%
mutate(End = as.numeric(End)) %>%
arrange(Start,End) %>% #sort first by Start and then by End to order peptides
rowwise() %>%
mutate(Length = (End-Start)+1,.after = End) #Calculate peptide length
vim_data <- subset(vim_data_full,select = c("Annotated_Sequence","126_Native_vimentin_replicate_1","127N_Native_vimentin_replicate_2","127C_Native_vimentin_replicate_3","128N_PAD2-citrullinated_vimentin_replicate_1","128C_PAD2-citrullinated_vimentin_replicate_2","129N_PAD2-citrullinated_vimentin_replicate_3","129C_PAD4-citrullinated_vimentin_replicate_1","130N_PAD4-citrullinated_vimentin_replicate_2","130C_PAD4-citrullinated_vimentin_replicate_3" )) #make new data.frame with only peptide sequences and abundances
vim_data$generated_uid <- 1:nrow(vim_data) #add numeric index
vim_data <- vim_data %>%
select(generated_uid, everything()) #move index to first column
vim_data_native_v_PAD2 <- na.omit(vim_data[,c(1,3:8)]) #subset native and PAD2 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD2[,2:7] <- log10(vim_data_native_v_PAD2[,2:7])
vim_data_native_v_PAD4 <- na.omit(vim_data[,c(1,3:5,9:11)]) #subset native and PAD4 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD4[,2:7] <- log10(vim_data_native_v_PAD4[,2:7])
vim_data_native_v_PAD2$p.value <- apply(vim_data_native_v_PAD2,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
vim_data_native_v_PAD4$p.value <- apply(vim_data_native_v_PAD4,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD4)
vim_nat_PAD2_p.value_vector <- as.numeric(vim_data_native_v_PAD2$p.value)
q_value <- multiple.down(vim_nat_PAD2_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD2$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD2$neg_log_q <- -(log10(vim_data_native_v_PAD2$q_value))
##Nat vs. PAD2
vim_nat2 <- vim_data_native_v_PAD2[,2:4]
vim_nat2$Nat2Mean <- rowMeans(vim_nat2)
vim_PAD2 <- vim_data_native_v_PAD2[,5:7]
vim_PAD2$PAD2Mean <- rowMeans(vim_PAD2)
vim_data_native_v_PAD2$Nat2Mean <- vim_nat2$Nat2Mean
vim_data_native_v_PAD2$PAD2Mean <- vim_PAD2$PAD2Mean
# vim_native_v_PAD2_means <- cbind(vim_nat2_means[,4],vim_PAD2_means[,4])
vim_data_native_v_PAD2$difference <- vim_data_native_v_PAD2$PAD2Mean - vim_data_native_v_PAD2$Nat2Mean
vim_data_native_v_PAD2$foldchange <- vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean
vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean)
# vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$fold_change)
# vim_native_v_PAD2_volcano <- as.data.frame(cbind(fold_change = log2(vim_native_v_PAD2_means$fold_change), neg_log_q = # vim_data_native_v_PAD2$neg_log_q))
#Positions_in_Master_Proteins = gsub("P08670 ","",Positions_in_Master_Proteins)) %>% #remove string referring to accession number from this column
#t.test(vim_data_native_v_PAD2[1,1:3],vim_data_native_v_PAD2[1,4:6]) #t.test on first row only for test
raw_vim_data_native_v_PAD2$p.value <- apply(raw_vim_data_native_v_PAD2,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
raw_vim_data_native_v_PAD2 <- na.omit(vim_data[,c(1,3:8)]) #subset native and PAD2 abundances;remove any rows containing NA values (or else fail t.test)
raw_vim_data_native_v_PAD2$p.value <- apply(raw_vim_data_native_v_PAD2,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
View(vim_data_native_v_PAD2)
raw_vim_nat_PAD2_p.value_vector <- as.numeric(raw_vim_data_native_v_PAD2$p.value)
q_value <- multiple.down(raw_vim_nat_PAD2_p.value_vector, alpha = 0.05)
raw_vim_data_native_v_PAD2$q_value <- as.numeric(q_value[["adjPValues"]])
raw_vim_data_native_v_PAD2$neg_log_q <- -(log10(raw_vim_data_native_v_PAD2$q_value))
raw_vim_nat2 <- raw_vim_data_native_v_PAD2[,2:4]
raw_vim_nat2$Nat2Mean <- rowMeans(raw_vim_nat2)
raw_vim_PAD2 <- raw_vim_data_native_v_PAD2[,5:7]
raw_vim_PAD2$PAD2Mean <- rowMeans(raw_vim_PAD2)
raw_vim_data_native_v_PAD2$Nat2Mean <- raw_vim_nat2$Nat2Mean
raw_vim_data_native_v_PAD2$PAD2Mean <- raw_vim_PAD2$PAD2Mean
raw_vim_data_native_v_PAD2$log2foldchange <- log2(raw_vim_data_native_v_PAD2$PAD2Mean/raw_vim_data_native_v_PAD2$Nat2Mean)
ggplot(data=raw_vim_data_native_v_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + xlim(-1,2.25) + theme_minimal() + geom_vline(xintercept=c(-0.25, 0.25), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=raw_vim_data_native_v_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-0.25, 0.25), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=raw_vim_data_native_v_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=vim_data_native_v_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + xlim(-1,2.25) + theme_minimal() + geom_vline(xintercept=c(-0.25, 0.25), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
mixed_volcano <- cbind(vim_data_native_v_PAD2$neg_log_q,raw_vim_data_native_v_PAD2$log2foldchange)
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
mixed_volcano <- as.data.frame(cbind(vim_data_native_v_PAD2$neg_log_q,raw_vim_data_native_v_PAD2$log2foldchange))
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
View(mixed_volcano)
ggplot(data=mixed_volcano, aes(x=V2, y=V1)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
mixed_volcano <- as.data.frame(cbind(neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V1_peptide_list <- which((vim_data_native_v_PAD2$neg_log_q >= 1.3 | vim_data_native_v_PAD2$neg_log_q <= -1.3) & (vim_data_native_v_PAD2$difference >= 0.5 | vim_data_native_v_PAD2$difference <= -0.5))
print(V1_peptide_list)
ggplot(data=vim_data_native_v_PAD2, aes(x=difference, y=neg_log_q)) + geom_point() + xlim(-1.5,2.25) + theme_minimal() + geom_vline(xintercept=c(-0.5, 0.5), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V1_peptide_list <- cbind(increased = which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5), decreased = which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference <= -0.5))
V1_peptide_list <- as.data.frame(cbind(increased = which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5), decreased = which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference <= -0.5)))
V1_peptide_list$increased <- which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5)
View(V1_peptide_list)
V1_peptide_list$decreased <- which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference <= -0.5)
V1_peptide_list$decreased2 <- which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference <= -0.5)
View(V1_peptide_list)
rm(V1_peptide_list)
V1_peptide_list$increased <- which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5)
V1_peptide_list <- data.frame("increased" = which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5), "decreased" =  which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference <= -0.5))
V1_peptide_list_increased <- which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5)
typeof(V1_peptide_list_increased)
V1_peptide_list_increased <- as.vector(which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5))
typeof(V1_peptide_list_increased)
V1_peptide_list_increased <- as.data.frame(which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5))
View(V1_peptide_list_increased)
View(vim_data_native_v_PAD2)
V1_peptide_list_increased <- subset(vim_data_native_v_PAD2, which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5), select= c(generated_uid,neg_log_q,difference)
View(V1_peptide_list_increased)
V1_peptide_list_increased <- subset(vim_data_native_v_PAD2, which(vim_data_native_v_PAD2$neg_log_q >= 1.3 & vim_data_native_v_PAD2$difference >= 0.5), select= c(generated_uid,neg_log_q,difference))
V1_peptide_list_increased <- subset(vim_data_native_v_PAD2, neg_log_q >= 1.3 & difference >= 0.5), select= c(generated_uid,neg_log_q,difference))
V1_peptide_list_increased <- subset(vim_data_native_v_PAD2, neg_log_q >= 1.3 & difference >= 0.5, select= c(generated_uid,neg_log_q,difference))
View(V1_peptide_list_increased)
ggplot(data=vim_data_native_v_PAD2, aes(x=difference, y=neg_log_q)) + geom_point() + xlim(-1.5,2.25) + theme_minimal() + geom_vline(xintercept=c(-0.5, 0.5), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V2_peptide_list_increased <- subset(vim_data_native_v_PAD2, neg_log_q >= 1.3 & difference >= 0.25, select= c(generated_uid,neg_log_q,log2foldchange))
View(V2_peptide_list_increased)
ggplot(data=vim_data_native_v_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + xlim(-1,2.25) + theme_minimal() + geom_vline(xintercept=c(-0.25, 0.25), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V2_peptide_list_increased <- subset(vim_data_native_v_PAD2, neg_log_q >= 1.3 & log2foldchange >= 0.25, select= c(generated_uid,neg_log_q,log2foldchange))
V3_peptide_list_increased <- subset(raw_vim_data_native_v_PAD2, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
View(V3_peptide_list_increased)
View(mixed_volcano)
mixed_volcano <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, generated_uid2 = raw_vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
mixed_volcano <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
V4_peptide_list_increased <- subset(mixed_volcano, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
View(V4_peptide_list_increased)
print(V4_peptide_list_increased$generated_uid)
increased_Venn <- list(A = V1_peptide_list_increased$generated_uid, B = V2_peptide_list_increased$generated_uid, C = V3_peptide_list_increased$generated_uid, D = V4_peptide_list_increased$generated_uid)
ggVennDiagram(increased_Venn)
?ggvenndiagram
install.packages("ggVennDiagram")
library(ggVennDiagram)
ggVennDiagram(increased_Venn)
View(increased_Venn)
increased_Venn <- list(A = V1_peptide_list_increased$generated_uid, B = V2_peptide_list_increased$generated_uid, C = V3_peptide_list_increased$generated_uid, D = as.numeric(V4_peptide_list_increased$generated_uid))
increased_Venn <- list(A = V1_peptide_list_increased$generated_uid, B = V2_peptide_list_increased$generated_uid, C = V3_peptide_list_increased$generated_uid, D = as.integer(V4_peptide_list_increased$generated_uid))
typeof(vim_data_native_v_PAD2)
mixed_volcano <- as.list(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
View(mixed_volcano)
mixed_volcano <- as.data.frame.integer(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
View(mixed_volcano)
mixed_volcano <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
View(mixed_volcano)
typeof(mixed_volcano)
typeof(vim_data_native_v_PAD2)
typeof(mixed_volcano$generated_uid)
mixed_volcano <- cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange)
View(mixed_volcano)
increased_Venn <- list(A = V1_peptide_list_increased$generated_uid, B = V2_peptide_list_increased$generated_uid, C = V3_peptide_list_increased$generated_uid, D = as.integer(V4_peptide_list_increased$generated_uid))
View(increased_Venn)
ggVennDiagram(increased_Venn)
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid))
ggVennDiagram(increased_Venn)
mixed_volcano <- cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange)
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
typeof(mixed_volcano)
typeof(vim_data_native_v_PAD2)
mixed_volcano <- cbind(gneg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange)
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
mixed_volcano <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2$neg_log_q,log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
View(mixed_volcano)
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V4_peptide_list_increased <- subset(mixed_volcano, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid))
View(increased_Venn)
ggVennDiagram(increased_Venn)
View(increased_Venn)
v5 = as.inter(23
25
27
33
35
36
37
40
45
48
51
52
53
56
57
59
64
65
67
68
69
75
91
96
98
114
117
118
121
123
124
125
138
139
142
146
163
164
167
174
181
182
184
185
186
187
204
210
216
223
230
233
236
241
249
258
263
268
280
282
283
284
292)
v5 = as.integer(23
25
27
33
35
36
37
40
45
48
51
52
53
56
57
59
64
65
67
68
69
75
91
96
98
114
117
118
121
123
124
125
138
139
142
146
163
164
167
174
181
182
184
185
186
187
204
210
216
223
230
233
236
241
249
258
263
268
280
282
283
284
292)
View(increased_Venn)
knitr::opts_knit$set(root.dir = "/Users/ashleycurran/Desktop/ProtMap_Analysis/Data",echo = TRUE) #set wd for entire notebook here
#first run install.packages("pacman") and library("pacman")
pacman::p_load(tidyverse,readxl,knitr,ggplot2,EnhancedVolcano,multtest,mutoss,ggVennDiagram)
vim_prism_incr <- read_xlsx("Vim_Prism_Increased.xlsx")
View(vim_prism_incr)
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid, Prism = vim_prism_incr))
ggVennDiagram(increased_Venn)
View(increased_Venn)
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid), Prism = vim_prism_incr)
View(increased_Venn)
vim_prism_incr <- as.integer(read_xlsx("Vim_Prism_Increased.xlsx"))
vim_prism_incr <- as.data.frame(read_xlsx("Vim_Prism_Increased.xlsx"))
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid), Prism = vim_prism_incr)
View(increased_Venn)
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid), Prism = as.integer(vim_prism_incr$`23`))
View(increased_Venn)
ggVennDiagram(increased_Venn)
increased_Venn <- list(V1 = V1_peptide_list_increased$generated_uid, V2 = V2_peptide_list_increased$generated_uid, V3 = V3_peptide_list_increased$generated_uid, V4 = as.integer(V4_peptide_list_increased$generated_uid))
ggVennDiagram(increased_Venn)
compare_Venn <- cbind(increased_Venn$V2,vim_prism_incr$`23`)
compare_Venn <- cbind(increased_Venn$V2,as.integer(vim_prism_incr$`23`))
compare_Venn <- list(V2 = increased_Venn$V2, Prism = as.integer(vim_prism_incr$`23`))
ggVennDiagram(compare_Venn)
View(V2_peptide_list_increased)
View(vim_data_full)
View(vim_data)
write_excel_csv(vim_data)
write_excel_csv(vim_data, "vim_data_R.csv")
write_excel_csv(V2_peptide_list_increased, "V2_pep_incr_R.csv")
View(V4_peptide_list_increased)
View(vim_data_native_v_PAD2)
View(vim_data)
View(vim_data_native_v_PAD2)
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-2, 2), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1.25, 1.25), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggVennDiagram(increased_Venn)
vim_data_native_v_PAD2 <- na.omit(vim_data[,c(1,3:8)]) #subset native and PAD2 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD2_t.test <- cbind(vim_data_native_v_PAD2$generated_uid, log10(vim_data_native_v_PAD2[,2:7]))
vim_data_native_v_PAD2_t.test
View(vim_data_native_v_PAD2_t.test)
vim_data_native_v_PAD4 <- na.omit(vim_data[,c(1,3:5,9:11)]) #subset native and PAD4 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD4_t.test <- cbind(vim_data_native_v_PAD4$generated_uid, log10(vim_data_native_v_PAD4[,2:7]))
View(vim_data_native_v_PAD4_t.test)
vim_data_native_v_PAD2_t.test$p.value <- apply(vim_data_native_v_PAD2_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
View(vim_data_native_v_PAD2_t.test)
vim_data_native_v_PAD4_t.test$p.value <- apply(vim_data_native_v_PAD4_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD4)
vim_nat_PAD2_p.value_vector <- as.numeric(vim_data_native_v_PAD2_t.test$p.value)
q_value <- multiple.down(vim_nat_PAD2_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD2_t.test$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD2_t.test$neg_log_q <- -(log10(vim_data_native_v_PAD2_t.test$q_value))
View(vim_data_native_v_PAD2_t.test)
vim_nat2 <- vim_data_native_v_PAD2[,2:4]
vim_nat2$Nat2Mean <- rowMeans(vim_nat2)
vim_PAD2 <- vim_data_native_v_PAD2[,5:7]
vim_PAD2$PAD2Mean <- rowMeans(vim_PAD2)
vim_data_native_v_PAD2$Nat2Mean <- vim_nat2$Nat2Mean
vim_data_native_v_PAD2$PAD2Mean <- vim_PAD2$PAD2Mean
vim_data_native_v_PAD2$foldchange <- vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean
vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean)
View(vim_data_native_v_PAD2)
mixed_volcano_PAD2 <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2_t.test$neg_log_q, log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
View(mixed_volcano_PAD2)
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V4_peptide_list_increased <- subset(mixed_volcano, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
knitr::opts_knit$set(root.dir = "/Users/ashleycurran/Desktop/ProtMap_Analysis/Data",echo = TRUE) #set wd for entire notebook here
vim_data_full <- read_xlsx("Vimentin_CatBSH_results_102020.xlsx", sheet = "TMT group2(vimentin)_peptide") #specify Excel doc and sheet containing peptides & abundances
names(vim_data_full) <- str_replace_all(names(vim_data_full), c(" "= "_", "," ="")) #replace spaces with underscores in column names
vim_data_full <- subset(vim_data_full, Master_Protein_Accessions == "P08670") #subset the data.frame keeping only peptides from vimentin - accession number P08670 (replace with protein of interest)
vim_data_full <- vim_data_full %>%
mutate(Positions_in_Master_Proteins = gsub("P08670 ","",Positions_in_Master_Proteins)) %>% #remove string referring to accession number from this column
separate(Positions_in_Master_Proteins, c("Start","End")) %>% #now separate this column into start and end positions of peptides
mutate(Start = as.numeric(Start)) %>%
mutate(End = as.numeric(End)) %>%
arrange(Start,End) %>% #sort first by Start and then by End to order peptides
rowwise() %>%
mutate(Length = (End-Start)+1,.after = End) #Calculate peptide length
vim_data <- subset(vim_data_full,select = c("Annotated_Sequence","126_Native_vimentin_replicate_1","127N_Native_vimentin_replicate_2","127C_Native_vimentin_replicate_3","128N_PAD2-citrullinated_vimentin_replicate_1","128C_PAD2-citrullinated_vimentin_replicate_2","129N_PAD2-citrullinated_vimentin_replicate_3","129C_PAD4-citrullinated_vimentin_replicate_1","130N_PAD4-citrullinated_vimentin_replicate_2","130C_PAD4-citrullinated_vimentin_replicate_3" )) #make new data.frame with only peptide sequences and abundances
vim_data$generated_uid <- 1:nrow(vim_data) #add numeric index
vim_data <- vim_data %>%
select(generated_uid, everything()) #move index to first column
vim_data_native_v_PAD2 <- na.omit(vim_data[,c(1,3:8)]) #subset native and PAD2 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD2_t.test <- cbind(vim_data_native_v_PAD2$generated_uid, log10(vim_data_native_v_PAD2[,2:7])) #make data.frame with log10 transformed data for t.test
vim_data_native_v_PAD4 <- na.omit(vim_data[,c(1,3:5,9:11)]) #subset native and PAD4 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD4_t.test <- cbind(vim_data_native_v_PAD4$generated_uid, log10(vim_data_native_v_PAD4[,2:7])) #make data.frame with log10 transformed data for t.test
vim_data_native_v_PAD2_t.test$p.value <- apply(vim_data_native_v_PAD2_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
vim_data_native_v_PAD4_t.test$p.value <- apply(vim_data_native_v_PAD4_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD4)
vim_nat_PAD2_p.value_vector <- as.numeric(vim_data_native_v_PAD2_t.test$p.value)
q_value <- multiple.down(vim_nat_PAD2_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD2_t.test$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD2_t.test$neg_log_q <- -(log10(vim_data_native_v_PAD2_t.test$q_value))
##Nat vs. PAD2
vim_nat2 <- vim_data_native_v_PAD2[,2:4]
vim_nat2$Nat2Mean <- rowMeans(vim_nat2)
vim_PAD2 <- vim_data_native_v_PAD2[,5:7]
vim_PAD2$PAD2Mean <- rowMeans(vim_PAD2)
vim_data_native_v_PAD2$Nat2Mean <- vim_nat2$Nat2Mean
vim_data_native_v_PAD2$PAD2Mean <- vim_PAD2$PAD2Mean
vim_data_native_v_PAD2$foldchange <- vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean
vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean)
# vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$fold_change)
# vim_native_v_PAD2_volcano <- as.data.frame(cbind(fold_change = log2(vim_native_v_PAD2_means$fold_change), neg_log_q = # vim_data_native_v_PAD2$neg_log_q))
#Positions_in_Master_Proteins = gsub("P08670 ","",Positions_in_Master_Proteins)) %>% #remove string referring to accession number from this column
#t.test(vim_data_native_v_PAD2[1,1:3],vim_data_native_v_PAD2[1,4:6]) #t.test on first row only for test
mixed_volcano_PAD2 <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2_t.test$neg_log_q, log2foldchange = raw_vim_data_native_v_PAD2$log2foldchange))
mixed_volcano_PAD2 <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2_t.test$neg_log_q, log2foldchange = vim_data_native_v_PAD2$log2foldchange))
ggplot(data=mixed_volcano, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
ggplot(data=mixed_volcano_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V4_peptide_list_increased <- subset(mixed_volcano, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
V4_peptide_list_increased <- subset(mixed_volcano_PAD2, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
View(V4_peptide_list_increased)
V4_peptide_list_decreased <- subset(mixed_volcano_PAD2, neg_log_q >= 1.3 & log2foldchange <= 1, select= c(generated_uid,neg_log_q,log2foldchange))
View(V4_peptide_list_decreased)
ggplot(data=mixed_volcano_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V4_peptide_list_decreased <- subset(mixed_volcano_PAD2, neg_log_q >= 1.3 & log2foldchange <= -1, select= c(generated_uid,neg_log_q,log2foldchange))
knitr::opts_knit$set(root.dir = "/Users/ashleycurran/Desktop/ProtMap_Analysis/Data",echo = TRUE) #set wd for entire notebook here
pacman::p_load(tidyverse,readxl,knitr,ggplot2,EnhancedVolcano,multtest,mutoss,ggVennDiagram)
vim_data_full <- read_xlsx("Vimentin_CatBSH_results_102020.xlsx", sheet = "TMT group2(vimentin)_peptide") #specify Excel doc and sheet containing peptides & abundances
knitr::opts_knit$set(root.dir = "/Users/ashleycurran/Desktop/ProtMap_Analysis/Data",echo = TRUE) #set wd for entire notebook here
vim_data_full <- read_xlsx("Vimentin_CatBSH_results_102020.xlsx", sheet = "TMT group2(vimentin)_peptide") #specify Excel doc and sheet containing peptides & abundances
names(vim_data_full) <- str_replace_all(names(vim_data_full), c(" "= "_", "," ="")) #replace spaces with underscores in column names
vim_data_full <- subset(vim_data_full, Master_Protein_Accessions == "P08670") #subset the data.frame keeping only peptides from vimentin - accession number P08670 (replace with protein of interest)
vim_data_full <- vim_data_full %>%
mutate(Positions_in_Master_Proteins = gsub("P08670 ","",Positions_in_Master_Proteins)) %>% #remove string referring to accession number from this column
separate(Positions_in_Master_Proteins, c("Start","End")) %>% #now separate this column into start and end positions of peptides
mutate(Start = as.numeric(Start)) %>%
mutate(End = as.numeric(End)) %>%
arrange(Start,End) %>% #sort first by Start and then by End to order peptides
rowwise() %>%
mutate(Length = (End-Start)+1,.after = End) #Calculate peptide length
vim_data <- subset(vim_data_full,select = c("Annotated_Sequence","126_Native_vimentin_replicate_1","127N_Native_vimentin_replicate_2","127C_Native_vimentin_replicate_3","128N_PAD2-citrullinated_vimentin_replicate_1","128C_PAD2-citrullinated_vimentin_replicate_2","129N_PAD2-citrullinated_vimentin_replicate_3","129C_PAD4-citrullinated_vimentin_replicate_1","130N_PAD4-citrullinated_vimentin_replicate_2","130C_PAD4-citrullinated_vimentin_replicate_3" )) #make new data.frame with only peptide sequences and abundances
vim_data$generated_uid <- 1:nrow(vim_data) #add numeric index
vim_data <- vim_data %>%
select(generated_uid, everything()) #move index to first column
vim_data_native_v_PAD2 <- na.omit(vim_data[,c(1,3:8)]) #subset native and PAD2 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD2_t.test <- cbind(vim_data_native_v_PAD2$generated_uid, log10(vim_data_native_v_PAD2[,2:7])) #make data.frame with log10 transformed data for t.test
vim_data_native_v_PAD4 <- na.omit(vim_data[,c(1,3:5,9:11)]) #subset native and PAD4 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD4_t.test <- cbind(vim_data_native_v_PAD4$generated_uid, log10(vim_data_native_v_PAD4[,2:7])) #make data.frame with log10 transformed data for t.test
vim_data_native_v_PAD2_t.test$p.value <- apply(vim_data_native_v_PAD2_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
vim_data_native_v_PAD4_t.test$p.value <- apply(vim_data_native_v_PAD4_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD4)
vim_nat_PAD2_p.value_vector <- as.numeric(vim_data_native_v_PAD2_t.test$p.value)
q_value <- multiple.down(vim_nat_PAD2_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD2_t.test$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD2_t.test$neg_log_q <- -(log10(vim_data_native_v_PAD2_t.test$q_value))
##Nat vs. PAD2
vim_nat2 <- vim_data_native_v_PAD2[,2:4]
vim_nat2$Nat2Mean <- rowMeans(vim_nat2)
vim_PAD2 <- vim_data_native_v_PAD2[,5:7]
vim_PAD2$PAD2Mean <- rowMeans(vim_PAD2)
vim_data_native_v_PAD2$Nat2Mean <- vim_nat2$Nat2Mean
vim_data_native_v_PAD2$PAD2Mean <- vim_PAD2$PAD2Mean
vim_data_native_v_PAD2$foldchange <- vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean
vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean)
# vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$fold_change)
# vim_native_v_PAD2_volcano <- as.data.frame(cbind(fold_change = log2(vim_native_v_PAD2_means$fold_change), neg_log_q = # vim_data_native_v_PAD2$neg_log_q))
#Positions_in_Master_Proteins = gsub("P08670 ","",Positions_in_Master_Proteins)) %>% #remove string referring to accession number from this column
#t.test(vim_data_native_v_PAD2[1,1:3],vim_data_native_v_PAD2[1,4:6]) #t.test on first row only for test
vim_nat_PAD4_p.value_vector <- as.numeric(vim_data_native_v_PAD4_t.test$p.value)
q_value <- multiple.down(vim_nat_PAD4_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD4_t.test$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD4_t.test$neg_log_q <- -(log10(vim_data_native_v_PAD4_t.test$q_value))
vim_nat4 <- vim_data_native_v_PAD4[,2:4]
vim_nat4$Nat2Mean <- rowMeans(vim_nat4)
vim_PAD4 <- vim_data_native_v_PAD4[,5:7]
vim_PAD4$PAD4Mean <- rowMeans(vim_PAD4)
vim_data_native_v_PAD4$Nat4Mean <- vim_nat4$Nat4Mean
vim_data_native_v_PAD4$PAD4Mean <- vim_PAD4$PAD4Mean
vim_data_native_v_PAD4$foldchange <- vim_data_native_v_PAD4$PAD4Mean/vim_data_native_v_PAD4$Nat4Mean
vim_nat4 <- vim_data_native_v_PAD4[,2:4]
vim_nat4$Nat4Mean <- rowMeans(vim_nat4)
knitr::opts_knit$set(root.dir = "/Users/ashleycurran/Desktop/ProtMap_Analysis/Data",echo = TRUE) #set wd for entire notebook here
vim_data_full <- read_xlsx("Vimentin_CatBSH_results_102020.xlsx", sheet = "TMT group2(vimentin)_peptide") #specify Excel doc and sheet containing peptides & abundances
names(vim_data_full) <- str_replace_all(names(vim_data_full), c(" "= "_", "," ="")) #replace spaces with underscores in column names
vim_data_full <- subset(vim_data_full, Master_Protein_Accessions == "P08670") #subset the data.frame keeping only peptides from vimentin - accession number P08670 (replace with protein of interest)
vim_data_full <- vim_data_full %>%
mutate(Positions_in_Master_Proteins = gsub("P08670 ","",Positions_in_Master_Proteins)) %>% #remove string referring to accession number from this column
separate(Positions_in_Master_Proteins, c("Start","End")) %>% #now separate this column into start and end positions of peptides
mutate(Start = as.numeric(Start)) %>%
mutate(End = as.numeric(End)) %>%
arrange(Start,End) %>% #sort first by Start and then by End to order peptides
rowwise() %>%
mutate(Length = (End-Start)+1,.after = End) #Calculate peptide length
vim_data <- subset(vim_data_full,select = c("Annotated_Sequence","126_Native_vimentin_replicate_1","127N_Native_vimentin_replicate_2","127C_Native_vimentin_replicate_3","128N_PAD2-citrullinated_vimentin_replicate_1","128C_PAD2-citrullinated_vimentin_replicate_2","129N_PAD2-citrullinated_vimentin_replicate_3","129C_PAD4-citrullinated_vimentin_replicate_1","130N_PAD4-citrullinated_vimentin_replicate_2","130C_PAD4-citrullinated_vimentin_replicate_3" )) #make new data.frame with only peptide sequences and abundances
vim_data$generated_uid <- 1:nrow(vim_data) #add numeric index
vim_data <- vim_data %>%
select(generated_uid, everything()) #move index to first column
vim_data_native_v_PAD2 <- na.omit(vim_data[,c(1,3:8)]) #subset native and PAD2 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD2_t.test <- cbind(vim_data_native_v_PAD2$generated_uid, log10(vim_data_native_v_PAD2[,2:7])) #make data.frame with log10 transformed data for t.test
vim_data_native_v_PAD4 <- na.omit(vim_data[,c(1,3:5,9:11)]) #subset native and PAD4 abundances;remove any rows containing NA values (or else fail t.test)
vim_data_native_v_PAD4_t.test <- cbind(vim_data_native_v_PAD4$generated_uid, log10(vim_data_native_v_PAD4[,2:7])) #make data.frame with log10 transformed data for t.test
vim_data_native_v_PAD2_t.test$p.value <- apply(vim_data_native_v_PAD2_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD2)
vim_data_native_v_PAD4_t.test$p.value <- apply(vim_data_native_v_PAD4_t.test,1,function(x)  t.test(x[2:4],x[5:7],var.equal=TRUE)$p.value) #run t.test on each row and add column with p value (nat vs. PAD4)
##Nat vs. PAD2
vim_nat_PAD2_p.value_vector <- as.numeric(vim_data_native_v_PAD2_t.test$p.value)
q_value <- multiple.down(vim_nat_PAD2_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD2_t.test$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD2_t.test$neg_log_q <- -(log10(vim_data_native_v_PAD2_t.test$q_value))
vim_nat2 <- vim_data_native_v_PAD2[,2:4]
vim_nat2$Nat2Mean <- rowMeans(vim_nat2)
vim_PAD2 <- vim_data_native_v_PAD2[,5:7]
vim_PAD2$PAD2Mean <- rowMeans(vim_PAD2)
vim_data_native_v_PAD2$Nat2Mean <- vim_nat2$Nat2Mean
vim_data_native_v_PAD2$PAD2Mean <- vim_PAD2$PAD2Mean
vim_data_native_v_PAD2$foldchange <- vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean
vim_data_native_v_PAD2$log2foldchange <- log2(vim_data_native_v_PAD2$PAD2Mean/vim_data_native_v_PAD2$Nat2Mean)
vim_nat_PAD4_p.value_vector <- as.numeric(vim_data_native_v_PAD4_t.test$p.value)
q_value <- multiple.down(vim_nat_PAD4_p.value_vector, alpha = 0.05)
vim_data_native_v_PAD4_t.test$q_value <- as.numeric(q_value[["adjPValues"]])
vim_data_native_v_PAD4_t.test$neg_log_q <- -(log10(vim_data_native_v_PAD4_t.test$q_value))
vim_nat4 <- vim_data_native_v_PAD4[,2:4]
vim_nat4$Nat4Mean <- rowMeans(vim_nat4)
vim_PAD4 <- vim_data_native_v_PAD4[,5:7]
vim_PAD4$PAD4Mean <- rowMeans(vim_PAD4)
vim_data_native_v_PAD4$Nat4Mean <- vim_nat4$Nat4Mean
vim_data_native_v_PAD4$PAD4Mean <- vim_PAD4$PAD4Mean
vim_data_native_v_PAD4$foldchange <- vim_data_native_v_PAD4$PAD4Mean/vim_data_native_v_PAD4$Nat4Mean
vim_data_native_v_PAD4$log2foldchange <- log2(vim_data_native_v_PAD4$PAD4Mean/vim_data_native_v_PAD4$Nat4Mean)
mixed_volcano_PAD2 <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD2$generated_uid, neg_log_q = vim_data_native_v_PAD2_t.test$neg_log_q, log2foldchange = vim_data_native_v_PAD2$log2foldchange))
ggplot(data=mixed_volcano_PAD2, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V4_peptide_list_increased_PAD2 <- subset(mixed_volcano_PAD2, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
V4_peptide_list_decreased_PAD2 <- subset(mixed_volcano_PAD2, neg_log_q >= 1.3 & log2foldchange <= -1, select= c(generated_uid,neg_log_q,log2foldchange))
mixed_volcano_PAD4 <- as.data.frame(cbind(generated_uid = vim_data_native_v_PAD4$generated_uid, neg_log_q = vim_data_native_v_PAD4_t.test$neg_log_q, log2foldchange = vim_data_native_v_PAD4$log2foldchange))
ggplot(data=mixed_volcano_PAD4, aes(x=log2foldchange, y=neg_log_q)) + geom_point() + theme_minimal() + geom_vline(xintercept=c(-1, 1), col="red") + geom_hline(yintercept=-log10(0.05), col="red")
V4_peptide_list_increased_PAD4 <- subset(mixed_volcano_PAD4, neg_log_q >= 1.3 & log2foldchange >= 1, select= c(generated_uid,neg_log_q,log2foldchange))
V4_peptide_list_decreased_PAD4 <- subset(mixed_volcano_PAD4, neg_log_q >= 1.3 & log2foldchange <= -1, select= c(generated_uid,neg_log_q,log2foldchange))
View(V4_peptide_list_increased_PAD4)
View(V4_peptide_list_increased_PAD2)
View(V4_peptide_list_increased_PAD2)
compare_Venn <- list(PAD2 = V4_peptide_list_increased_PAD2$generated_uid, PAD4 = V4_peptide_list_increased_PAD4$generated_uid
)
ggVennDiagram(compare_Venn)
View(V4_peptide_list_increased_PAD2)
View(vim_data)
View(vim_data_full)
View(vim_data)
View(vim_data_full)
View(vim_data)
join <- inner_join(V4_peptide_list_increased_PAD2,vim_data, by = "generated_uid")
View(compare_Venn)
View(join)
NAPA_created <- c("KNVRAQLVDMKR","EKHQLYIDETVNSNIPT","NEANKYQISVNKYRG")
NAPA_created
grepl(join, compare_Venn$PAD4)
View(compare_Venn)
